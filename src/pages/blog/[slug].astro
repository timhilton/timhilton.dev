---
import PostHeader from "../../components/storyblok/PostHeader.astro";
import PostCopy from "../../components/storyblok/PostCopy.astro";
import PostMedia from "../../components/storyblok/PostMedia.astro";
import Layout from "../../layouts/Layout.astro";

const { slug } = Astro.params;
const url = new URL(Astro.request.url);
const token =
    url.searchParams.get("token") || import.meta.env.STORYBLOK_API_TOKEN;

console.log("Fetching blog post:", slug);
console.log("Using token:", token);

const res = await fetch(
    `https://api-us.storyblok.com/v2/cdn/stories/blog/${slug}?version=draft&token=${token}`,
);

if (!res.ok) {
    console.error("Response status:", res.status);
    const err = await res.text();
    console.error("Error response:", err);
    throw new Error("Failed to fetch blog post");
}

const { story } = await res.json();
const blocks = story.content.body || [];
---

<Layout title={story.name}>
    <div class="container">
        <a
            href="/blog"
            style="display: inline-flex; align-items: center; text-decoration: none; color: inherit; font-size: 0.9rem;"
        >
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                style="margin-right: 0.5rem;"
            >
                <polyline points="15 18 9 12 15 6"></polyline>
            </svg>
            Back to blog
        </a>
    </div>

    <article>
        {
            blocks.map((blok) => {
                if (blok.component === "post_header") {
                    return <PostHeader blok={blok} />;
                } else if (blok.component === "post_copy") {
                    return <PostCopy blok={blok} />;
                } else if (blok.component === "post_media") {
                    return <PostMedia blok={blok} />;
                }
                return null;
            })
        }
    </article>
</Layout>

<style>
    article {
        max-width: 980px;
        margin: 0 auto;
        padding-top: 3rem;
        padding-bottom: 4rem;

        @media screen and (max-width: 1024px) {
            max-width: 768px;
            width: 87.5%;
        }

        @media screen and (max-width: 768px) {
            max-width: 414px;
            width: 87.5%;
        }
    }

    .container {
        width: 980px;
        min-height: max-content;
        margin: 0 auto;
        padding: 4rem 2rem 2rem;

        @media screen and (max-width: 768px) {
            width: 100%;
            padding: 3rem 0 2rem;
            height: max-content;
        }
    }
</style>
