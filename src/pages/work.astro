---
import Image from "astro/components/Image.astro";
import Layout from "../layouts/Layout.astro";
import { contentfulClient } from "../lib/contentful";
import PortfolioItem from "../components/PortfolioItem.astro";

const entries = await contentfulClient.getEntries({
    content_type: "portfolioItem",
});

let items = entries.items.map((item) => {
    const fields = item.fields;
    return {
        project: fields.project || "",
        description: fields.description || "",
        slug: fields.slug || "",
        tech: Array.isArray(fields.tech) ? fields.tech : [],
        role: fields.role || "",
        demoUrl: fields.demoUrl || "",
        imageUrl: fields.imageUrl || "",
        isProtected: Boolean(fields.isProtected),
        password: fields.password || "",
    };
});

const title = "Tim Hilton - Work";
---

<Layout title={title}>
    <section class="container">
        <h2><span transition:name="fullName">Work</span></h2>
        <div class="portfolio-grid">
            {
                items.map((item, index) => (
                    <PortfolioItem
                        {...item}
                        index={index}
                        isProtected={item.isProtected}
                        password={item.password}
                    />
                ))
            }
        </div>
    </section>
</Layout>

<style>
    .container {
        width: 75vw;
        min-height: max-content;
        margin: 0 auto;
        height: calc(100dvh - 48px);
        padding: 3rem 2rem 2rem;

        @media screen and (max-width: 768px) {
            padding: 3rem 0 2rem;
        }
    }

    h2 {
        font-size: 2.5rem;
        font-weight: bold;
        margin-bottom: 24px;
    }

    .portfolio-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 24px;

        @media screen and (max-width: 768px) {
            grid-template-columns: 1fr;
        }
    }
    @keyframes slideIn {
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }
</style>
