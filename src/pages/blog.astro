---
import Layout from "../layouts/Layout.astro";

const API_TOKEN = import.meta.env.STORYBLOK_API_TOKEN;
console.log(API_TOKEN);

const res = await fetch(
    `https://api-us.storyblok.com/v2/cdn/stories?token=${API_TOKEN}&starts_with=blog/&version=draft&sort_by=first_published_at:desc`,
);

if (!res.ok) {
    throw new Error("Failed to fetch blog posts from Storyblok.");
}

const json = await res.json();
const posts = json.stories || [];
const title = "Tim Hilton - Blog";
---

<Layout title={title}>
    <main>
        <h1>Blog</h1>
        <ul>
            {
                posts.map((post) => (
                    <li>
                        <a href={`/blog/${post.slug}`}>{post.name}</a>
                        <br />
                        <small>
                            {new Date(
                                post.published_at || post.created_at,
                            ).toLocaleDateString()}
                        </small>
                    </li>
                ))
            }
        </ul>
    </main>
</Layout>

    <style>
        main {
            width: 100%;
            max-width: 980px
            margin: 0 auto;
            padding: 4rem 2rem;

            @media screen and (max-width: 768px) {
                max-width: 414px;
                width: 87.5%;
                margin: 0 auto;
                padding: 3rem 0;
            }
        }

        h1 {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 24px;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            margin-bottom: 16px;
            border: 1px solid var(--text-color);
            padding: 1rem;
            border-radius: 8px;
        }

        a {
            color: var(--text-color);
            text-decoration: none;
            font-size: 1.5em;

            @media screen and (max-width: 768px) {
                font-size: 1.25em;
            }
        }

        a:hover {
            text-decoration: underline;
        }
    </style>